upgrade ubuntu kernel
https://linuxhint.com/install-upgrade-linux-kernel-ubuntu-linux-mint/

patch preempt-rt
https://unix.stackexchange.com/questions/650320/installing-preempt-rt-kernel-on-ubuntu-20-04

CONFIG_SYSTEM_TRUSTED_KEYS=""
CONFIG_SYSTEM_REVOCATION_KEYS=""

https://docs.ros.org/en/foxy/Tutorials/Building-Realtime-rt_preempt-kernel-for-ROS-2.html


#get dependency
sudo apt-get build-dep linux
sudo apt-get install libncurses-dev flex bison openssl libssl-dev dkms libelf-dev libudev-dev libpci-dev libiberty-dev autoconf fakeroot

sudo apt install dwarves
sudo apt install zstd


# upgarde linux kernel
wget https://raw.githubusercontent.com/pimlie/ubuntu-mainline-kernel.sh/master/ubuntu-mainline-kernel.sh
sudo ubuntu-mainline-kernel.sh â€“i
sudo reboot


# get linux kernel & patch
wget https://mirrors.edge.kernel.org/pub/linux/kernel/v5.x/linux-5.4.78.tar.gz
wget http://cdn.kernel.org/pub/linux/kernel/projects/rt/5.4/older/patch-5.4.78-rt44.patch.gz

tar -xf linux-5.4.143.tar.xz
cd linux-5.4.143
xzcat ../patch-5.4.143-rt64-rc2.patch.xz | patch -p1

# set kernel configuration
cp /boot/config-5.4.0-54-generic .config
make menuconfig

# Enable CONFIG_PREEMPT_RT
 -> General Setup
  -> Preemption Model (Fully Preemptible Kernel (Real-Time))
   (X) Fully Preemptible Kernel (Real-Time)

# Enable CONFIG_HIGH_RES_TIMERS
 -> General setup
  -> Timers subsystem
   [*] High Resolution Timer Support

# Enable CONFIG_NO_HZ_FULL
 -> General setup
  -> Timers subsystem
   -> Timer tick handling (Full dynticks system (tickless))
    (X) Full dynticks system (tickless)

# Set CONFIG_HZ_1000 (note: this is no longer in the General Setup menu, go back twice)
 -> Processor type and features
  -> Timer frequency (1000 HZ)
   (X) 1000 HZ

# Set CPU_FREQ_DEFAULT_GOV_PERFORMANCE [=y]
 ->  Power management and ACPI options
  -> CPU Frequency scaling
   -> CPU Frequency scaling (CPU_FREQ [=y])
    -> Default CPUFreq governor (<choice> [=y])
     (X) performance
     

CONFIG_SYSTEM_TRUSTED_KEYS=""
CONFIG_SYSTEM_REVOCATION_KEYS=""

#build and install
make -j `nproc` deb-pkg
sudo dpkg -i ../*.deb

#configure grub menu so we can choose the installed kernel

Edit /etc/default/grub:

Set GRUB_HIDDEN_TIMEOUT= (no value after the = sign).
Set GRUB_TIMEOUT=n to show the menu for n seconds.

Run update-grub to regenerate /boot/grub/grub.cfg based on the /etc/default/grub settings.
sudo reboot

#test RT kenerl
https://wiki.linuxfoundation.org/realtime/documentation/howto/tools/rt-tests#compile-and-install
https://wiki.linuxfoundation.org/realtime/documentation/howto/tools/rteval
https://www.mankier.com/8/rteval
https://git.kernel.org/pub/scm/utils/rteval/rteval.git/tree/doc/rteval.txt

git clone git://git.kernel.org/pub/scm/utils/rteval/rteval.git
sudo apt-get install python3-libxml2
sudo apt install python3-ethtool

#sample test
https://www.opensourceforu.com/2021/05/an-analysis-of-the-real-time-performance-of-linux-kernels/


How to use ros2_tracing to trace and analyze an application
https://real-time-working-group.readthedocs.io/en/rolling/Guides/ros2_tracing_trace_and_analyze.html

sudo apt-get install libacl1-dev

https://gitlab.com/ApexAI/performance_test#example
colcon build --cmake-args -DPERFORMANCE_TEST_CYCLONEDDS_ENABLED=OFF


install perfplot
https://githubmemory.com/repo/eProsima/performance_test
pip3 install performance_test/helper_scripts/apex_performance_plotter

cyclictest
http://manpages.ubuntu.com/manpages/trusty/man8/cyclictest.8.html
sudo cyclictest -qm -i 100 -d 0 -h 2000 -p 95 --smp -D1m --histfile=cyctest_nonrt.hist
sudo signaltest -p99 -D1m
T: 0 (468896) P:99 C:  93712 Min:      5 Act:    7 Avg:   12 Max:    5005
T: 0 ( 4838) P:99 C:  91872 Min:      4 Act:    4 Avg:   20 Max:     203






